<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="6" passed="5">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="5188" started-at="2019-06-13T11:08:30Z" finished-at="2019-06-13T11:08:35Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="5188" started-at="2019-06-13T11:08:30Z" finished-at="2019-06-13T11:08:35Z">
      <class name="com.RestAssured.tests.WeatherDetailsAPITests">
        <test-method status="PASS" signature="APIAunthenticationTest()[pri:0, instance:com.RestAssured.tests.WeatherDetailsAPITests@29774679]" name="APIAunthenticationTest" duration-ms="1482" started-at="2019-06-13T11:08:30Z" finished-at="2019-06-13T11:08:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- APIAunthenticationTest -->
        <test-method status="PASS" signature="JSONBodyDeserialization()[pri:0, instance:com.RestAssured.tests.WeatherDetailsAPITests@29774679]" name="JSONBodyDeserialization" duration-ms="975" started-at="2019-06-13T11:08:32Z" finished-at="2019-06-13T11:08:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- JSONBodyDeserialization -->
        <test-method status="FAIL" signature="JSONPathUsageTest()[pri:0, instance:com.RestAssured.tests.WeatherDetailsAPITests@29774679]" name="JSONPathUsageTest" duration-ms="343" started-at="2019-06-13T11:08:33Z" finished-at="2019-06-13T11:08:33Z">
          <exception class="io.restassured.path.json.exception.JsonPathException">
            <message>
              <![CDATA[Failed to parse the JSON document]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.restassured.path.json.exception.JsonPathException: Failed to parse the JSON document
at io.restassured.path.json.JsonPath$ExceptionCatcher.invoke(JsonPath.java:930)
at io.restassured.path.json.JsonPath$4.doParseWith(JsonPath.java:895)
at io.restassured.path.json.JsonPath$JsonParser.parseWith(JsonPath.java:974)
at io.restassured.path.json.JsonPath.get(JsonPath.java:201)
at io.restassured.path.json.JsonPath.getList(JsonPath.java:374)
at com.RestAssured.tests.WeatherDetailsAPITests.JSONPathUsageTest(WeatherDetailsAPITests.java:148)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:483)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: java.lang.IllegalArgumentException: The JSON input text should neither be null nor empty.
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:408)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:105)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:60)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:235)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:247)
at io.restassured.internal.path.json.ConfigurableJsonSlurper.parseText(ConfigurableJsonSlurper.groovy:80)
at io.restassured.path.json.JsonPath$4$1.method(JsonPath.java:893)
at io.restassured.path.json.JsonPath$ExceptionCatcher.invoke(JsonPath.java:928)
... 30 more
]]>
            </full-stacktrace>
          </exception> <!-- io.restassured.path.json.exception.JsonPathException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- JSONPathUsageTest -->
        <test-method status="PASS" signature="getWeatherDetailsGetMethod()[pri:0, instance:com.RestAssured.tests.WeatherDetailsAPITests@29774679]" name="getWeatherDetailsGetMethod" duration-ms="983" started-at="2019-06-13T11:08:33Z" finished-at="2019-06-13T11:08:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getWeatherDetailsGetMethod -->
        <test-method status="PASS" signature="getWeatherDetailsRequestMethod()[pri:0, instance:com.RestAssured.tests.WeatherDetailsAPITests@29774679]" name="getWeatherDetailsRequestMethod" duration-ms="687" started-at="2019-06-13T11:08:34Z" finished-at="2019-06-13T11:08:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getWeatherDetailsRequestMethod -->
        <test-method status="PASS" signature="postDetailsTest()[pri:0, instance:com.RestAssured.tests.WeatherDetailsAPITests@29774679]" name="postDetailsTest" duration-ms="656" started-at="2019-06-13T11:08:35Z" finished-at="2019-06-13T11:08:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postDetailsTest -->
      </class> <!-- com.RestAssured.tests.WeatherDetailsAPITests -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
